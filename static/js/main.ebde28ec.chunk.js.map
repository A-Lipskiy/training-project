{"version":3,"sources":["Ball.tsx","useFetchPokemon.tsx","PlayerCard.tsx","Game.tsx","PokemonCard.tsx","useFetchPokemonsPages.tsx","PokemonsList.tsx","useIntersectionObserver.tsx","MainPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Ball","x","y","className","style","top","left","name","onSetData","a","fetch","response","json","rJSON","guard","height","weight","base_experience","sprites","console","log","useFetchPokemon","useState","isLoading","setIsLoading","pokemon","setPokemon","useEffect","isUnmounted","fetchPokemon","poke","PlayerCard","pokemonName","playerCardType","size","color","src","other","dream_world","front_default","calculateCoordMinusStep","oldCoord","calculateCoordPlusStep","Game","pokemonOne","pokemonTwo","ballCoords","ballCoordY","ballCoordX","player1Coord","setPlayer1Coord","player2Coord","setPlayer2Coord","isGameStarted","setIsGameStarted","firstPlayerInt","secondPlayerInt","handleKeyUp","e","includes","key","clearInterval","handleKeyDown","setInterval","document","addEventListener","removeEventListener","to","onClick","PokemonCard","isSelected","fetchPokemonsList","pageNumber","truePageSize","page","count","results","Error","useFetchPokemonsPages","pagesToUpload","setPages","curentLastPage","pages","setPagesToUpload","Array","length","fill","map","index","pokemonsPagesPromise","pokemons","Promise","all","pokemonsPages","oldPages","result","push","initialPageCount","Math","floor","round","window","innerHeight","PokemonsList","selectedPokemons","onChange","setCurentLastPage","bottomRef","useRef","elementRef","onIntersection","threshold","entry","setEntry","node","current","observer","IntersectionObserver","observe","disconnect","isIntersecting","useIntersectionObserver","useCallback","flatMap","indexInSelectedPokemons","indexOf","newSelectedPokemons","splice","shift","handleClick","undefined","ref","MainPage","onChangePokemons","App","setSelectedPokemons","exact","path","render","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ebde28ec.chunk.js","sourcesContent":["type Props = {\n  x: number;\n  y: number;\n};\n\nexport function Ball({ x, y }: Props): JSX.Element {\n  return (\n    <div\n      className=\"ball\"\n      style={{\n        top: `${y}%`,\n        left: `${x}%`,\n      }}\n    ></div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport type { PokeResponse } from './pokemonTypes.js';\n\nasync function fetchPokemon(\n  name: string,\n  onSetData: (pokemon: PokeResponse) => void\n) {\n  try {\n    const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\n    const rJSON: unknown = await response.json();\n    const guard = (rJSON: unknown): rJSON is PokeResponse =>\n      typeof rJSON === 'object' &&\n      rJSON !== null &&\n      'name' in rJSON &&\n      'height' in rJSON &&\n      'weight' in rJSON &&\n      'base_experience' in rJSON;\n    if (guard(rJSON)) {\n      onSetData({\n        name: rJSON.name,\n        height: rJSON.height,\n        weight: rJSON.weight,\n        base_experience: rJSON.base_experience,\n        sprites: rJSON.sprites,\n      });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport const useFetchPokemon = (\n  name: string | undefined\n): { isLoading: boolean; pokemon: PokeResponse | undefined } => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [pokemon, setPokemon] = useState<PokeResponse | undefined>();\n\n  useEffect(() => {\n    let isUnmounted = false;\n    if (name) {\n      setIsLoading(true);\n      fetchPokemon(name, (poke) => {\n        if (isUnmounted) return;\n        setPokemon(poke);\n        setIsLoading(false);\n      });\n    }\n    return () => {\n      isUnmounted = true;\n    };\n  }, [name]);\n\n  return { isLoading, pokemon };\n};\n","import { useFetchPokemon } from './useFetchPokemon';\nimport { BallSpinner } from 'react-spinners-kit';\n\ntype Props = {\n  y: number;\n  pokemonName: string;\n  playerCardType: 'left' | 'right';\n};\n\nexport function PlayerCard({\n  y,\n  pokemonName,\n  playerCardType,\n}: Props): JSX.Element {\n  const { isLoading, pokemon } = useFetchPokemon(pokemonName);\n  if (isLoading || !pokemon)\n    return (\n      <div className={`${playerCardType}-card`} style={{ top: `${y}%` }}>\n        <BallSpinner size={70} color=\"#6c5b7b\" />\n      </div>\n    );\n  return (\n    <div className={`${playerCardType}-card`} style={{ top: `${y}%` }}>\n      <img\n        className=\"player-card-image\"\n        src={pokemon.sprites.other.dream_world.front_default}\n      ></img>\n    </div>\n  );\n}\n","import { Link, Redirect } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Ball } from './Ball';\nimport { PlayerCard } from './PlayerCard';\n\ntype TimeoutResult = ReturnType<typeof setTimeout> | null;\n\ntype Props = {\n  pokemonOne: string;\n  pokemonTwo: string;\n};\n\nconst PLAYER_COORD_INTERVAL = 40;\nconst PLAYER_COORD_STEP = 5;\n\nfunction calculateCoordMinusStep(oldCoord: number): number {\n  return oldCoord > 0 ? oldCoord - PLAYER_COORD_STEP : oldCoord;\n}\n\nfunction calculateCoordPlusStep(oldCoord: number): number {\n  return oldCoord < 100 ? oldCoord + PLAYER_COORD_STEP : oldCoord;\n}\nexport function Game({ pokemonOne, pokemonTwo }: Props): JSX.Element {\n  const [ballCoords] = useState([50, 50]);\n  const [ballCoordY, ballCoordX] = ballCoords;\n  const [player1Coord, setPlayer1Coord] = useState(50);\n  const [player2Coord, setPlayer2Coord] = useState(50);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n\n  useEffect(() => {\n    let firstPlayerInt: TimeoutResult = null;\n    let secondPlayerInt: TimeoutResult = null;\n\n    const handleKeyUp = (e?: KeyboardEvent) => {\n      if (!e || ['w', 'W', 's', 'S'].includes(e.key)) {\n        if (firstPlayerInt) clearInterval(firstPlayerInt);\n        firstPlayerInt = null;\n      }\n      if (!e || ['o', 'O', 'l', 'L'].includes(e.key)) {\n        if (secondPlayerInt) clearInterval(secondPlayerInt);\n        secondPlayerInt = null;\n      }\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      console.log(e.key);\n      switch (e.key) {\n        case 'w':\n        case 'W':\n          firstPlayerInt =\n            firstPlayerInt ||\n            setInterval(() => {\n              setPlayer1Coord(calculateCoordMinusStep);\n            }, PLAYER_COORD_INTERVAL);\n\n          break;\n        case 's':\n        case 'S':\n          firstPlayerInt =\n            firstPlayerInt ||\n            setInterval(() => {\n              setPlayer1Coord(calculateCoordPlusStep);\n            }, PLAYER_COORD_INTERVAL);\n          break;\n        case 'o':\n        case 'O':\n          secondPlayerInt =\n            secondPlayerInt ||\n            setInterval(() => {\n              setPlayer2Coord(calculateCoordMinusStep);\n            }, PLAYER_COORD_INTERVAL);\n          break;\n        case 'l':\n        case 'L':\n          secondPlayerInt =\n            secondPlayerInt ||\n            setInterval(() => {\n              setPlayer2Coord(calculateCoordPlusStep);\n            }, PLAYER_COORD_INTERVAL);\n          break;\n        default:\n          break;\n      }\n    };\n    if (isGameStarted) {\n      document.addEventListener('keydown', handleKeyDown);\n      document.addEventListener('keyup', handleKeyUp);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n        document.removeEventListener('keyup', handleKeyUp);\n        handleKeyUp();\n      };\n    }\n  }, [isGameStarted]);\n\n  if (pokemonOne == '' || pokemonTwo == '') return <Redirect to=\"/\" />;\n  return (\n    <div className=\"page-wrapper\">\n      <Link to=\"/\">\n        <button className=\"button-close-game\">Close game</button>\n      </Link>\n      <h1 className=\"header-text\">Pokemons ping-pong</h1>\n      <div className=\"ui-field\">\n        <div className=\"dotted-line\"></div>\n        <div className=\"game-field\">\n          <Ball x={ballCoordX} y={ballCoordY} />\n        </div>\n        <div className=\"cards-wrapper\">\n          <PlayerCard\n            y={player1Coord}\n            pokemonName={pokemonOne}\n            playerCardType=\"left\"\n          />\n          <PlayerCard\n            y={player2Coord}\n            pokemonName={pokemonTwo}\n            playerCardType=\"right\"\n          />\n        </div>\n      </div>\n      <button\n        className={`button-start-game ${\n          !isGameStarted ? 'button-visible' : ''\n        }`}\n        onClick={() => setIsGameStarted(true)}\n      >\n        Start Game\n      </button>\n    </div>\n  );\n}\n","import { BallSpinner } from 'react-spinners-kit';\nimport { useFetchPokemon } from './useFetchPokemon';\n\ntype Props = {\n  name: string | undefined;\n  onClick: () => void;\n  isSelected: boolean;\n};\n\nexport function PokemonCard({ name, onClick, isSelected }: Props): JSX.Element {\n  const { isLoading, pokemon } = useFetchPokemon(name);\n  if (isLoading || !pokemon)\n    return (\n      <div className=\"card-wrapper\">\n        <BallSpinner size={200} color=\"#f8b195\" />\n      </div>\n    );\n\n  return (\n    <div\n      className={`card-wrapper ${isSelected ? 'selected' : ''}`}\n      onClick={onClick}\n    >\n      <span className=\"block-span\">Name: {pokemon.name}</span>\n      <span className=\"block-span\">Height: {pokemon.height}</span>\n      <span className=\"block-span\">Weight: {pokemon.weight}</span>\n      <span className=\"block-span\">\n        Base experience: {pokemon.base_experience}\n      </span>\n      <img\n        className=\"pokemon-image\"\n        src={pokemon.sprites.other.dream_world.front_default}\n      ></img>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport type { PokeListResponse } from './pokemonTypes.js';\nimport { truePageSize } from './PokemonsList';\n\nasync function fetchPokemonsList(\n  pageNumber: number\n): Promise<{ count: number; results: Array<{ name: string; url: string }> }> {\n  try {\n    const response = await fetch(\n      `https://pokeapi.co/api/v2/pokemon?offset=${\n        pageNumber * truePageSize\n      }&limit=${truePageSize}`\n    );\n    const rJSON: unknown = await response.json();\n    const guard = (rJSON: unknown): rJSON is PokeListResponse =>\n      typeof rJSON === 'object' &&\n      rJSON !== null &&\n      'count' in rJSON &&\n      'results' in rJSON;\n    if (guard(rJSON)) {\n      const page = {\n        count: rJSON.count,\n        results: rJSON.results,\n      };\n      return page;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  throw new Error(`Can't fetch page ${pageNumber}`);\n}\nexport const useFetchPokemonsPages = async (\n  pagesToUpload: number[],\n  setPages: React.Dispatch<React.SetStateAction<PokeListResponse[]>>,\n  curentLastPage: number,\n  pages: PokeListResponse[],\n  setPagesToUpload: React.Dispatch<React.SetStateAction<number[]>>\n): Promise<PokeListResponse[] | undefined> => {\n  useEffect(() => {\n    const pagesToUpload = new Array<number>(curentLastPage - pages.length)\n      .fill(pages.length)\n      .map((length, index) => length + index);\n\n    setPagesToUpload(pagesToUpload);\n  }, [curentLastPage, pages, setPagesToUpload]);\n\n  try {\n    const pokemonsPagesPromise = pagesToUpload.map(async (pageNumber) => {\n      const pokemons = await fetchPokemonsList(pageNumber);\n\n      return {\n        pageNumber,\n        pokemons,\n      };\n    });\n\n    const pokemonsPages = await Promise.all(pokemonsPagesPromise);\n    if (pagesToUpload.length === 0) return;\n    setPages((oldPages) => {\n      const result = [...oldPages];\n\n      for (const { pokemons, pageNumber } of pokemonsPages) {\n        if (result[pageNumber]) result[pageNumber] = pokemons;\n        else result.push(pokemons);\n      }\n\n      return result;\n    });\n  } catch (e) {\n    console.log({ e });\n  }\n};\n","import { PokemonCard } from './PokemonCard';\nimport { useIntersectionObserver } from './useIntersectionObserver';\nimport { useState, useRef, useCallback } from 'react';\nimport { useFetchPokemonsPages } from './useFetchPokemonsPages';\nimport type { PokeListResponse } from './pokemonTypes.js';\n\nexport const truePageSize = 10;\n\nconst initialPageCount =\n  Math.floor((Math.round(window.innerHeight / 300) + 1) / truePageSize) + 1;\n\ntype Props = {\n  selectedPokemons: [string, string];\n  onChange: (pokemons: [string, string]) => void;\n};\n\nexport function PokemonsList({\n  selectedPokemons,\n  onChange,\n}: Props): JSX.Element {\n  const [curentLastPage, setCurentLastPage] = useState(initialPageCount);\n  const [pagesToUpload, setPagesToUpload] = useState<number[]>([]);\n  const [pages, setPages] = useState<PokeListResponse[]>([]);\n  const bottomRef = useRef<HTMLDivElement>(null);\n\n  const updatePageCount = useCallback(() => {\n    setCurentLastPage((page) => page + 1);\n  }, []);\n\n  useIntersectionObserver(bottomRef, updatePageCount, 0);\n\n  useFetchPokemonsPages(\n    pagesToUpload,\n    setPages,\n    curentLastPage,\n    pages,\n    setPagesToUpload\n  );\n\n  function handleClick(name: string): void {\n    const indexInSelectedPokemons = selectedPokemons.indexOf(name);\n    const newSelectedPokemons: [string, string] = [...selectedPokemons];\n    if (indexInSelectedPokemons > -1) {\n      newSelectedPokemons.splice(indexInSelectedPokemons, 1);\n    } else {\n      newSelectedPokemons.push(name);\n      if (newSelectedPokemons.length > 2) {\n        newSelectedPokemons.shift();\n      }\n    }\n    onChange(newSelectedPokemons);\n  }\n  const pokemons = pages\n    .flatMap((pokemon) => pokemon.results)\n    .map(({ name }) => (\n      <PokemonCard\n        key={name}\n        name={name}\n        isSelected={selectedPokemons.includes(name)}\n        onClick={() => handleClick(name)}\n      />\n    ));\n\n  if (pages.length * truePageSize < pages[0]?.count || pages[0] === undefined) {\n    return (\n      <div className=\"pokemon-list-wrapper\">\n        {pokemons}\n        <div ref={bottomRef} className=\"bottom-ref-element\" />\n      </div>\n    );\n  } else {\n    return <div className=\"pokemon-list-wrapper\">{pokemons}</div>;\n  }\n}\n","import { RefObject, useEffect, useState } from 'react';\n\nexport function useIntersectionObserver(\n  elementRef: RefObject<Element>,\n  onIntersection: () => void,\n  threshold = 0\n): void {\n  const [entry, setEntry] = useState<IntersectionObserverEntry>();\n\n  useEffect(() => {\n    const node = elementRef?.current;\n    if (!node) return;\n    const observer = new IntersectionObserver(([entry]) => setEntry(entry), {\n      threshold,\n    });\n    observer.observe(node);\n\n    return () => observer.disconnect();\n  }, [elementRef, threshold]);\n\n  useEffect(() => {\n    if (entry?.isIntersecting) {\n      onIntersection();\n    }\n  }, [entry?.isIntersecting, onIntersection]);\n}\n","import { PokemonsList } from './PokemonsList';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  selectedPokemons: [string, string];\n  onChangePokemons: (pokemons: [string, string]) => void;\n};\nexport function MainPage({\n  selectedPokemons,\n  onChangePokemons,\n}: Props): JSX.Element {\n  return (\n    <div className=\"page-wrapper\">\n      <h1 className=\"header-text\">Choose two pokemons</h1>\n      <PokemonsList\n        selectedPokemons={selectedPokemons}\n        onChange={onChangePokemons}\n      />\n      <Link to={`/game/${selectedPokemons[0]}/${selectedPokemons[1]}`}>\n        <button\n          className={`button-start-game ${\n            selectedPokemons.length === 2 && !selectedPokemons.includes('')\n              ? 'button-visible'\n              : ''\n          }`}\n        >\n          Start Game\n        </button>\n      </Link>\n    </div>\n  );\n}\n","import { Game } from './Game';\nimport './App.css';\nimport { useState } from 'react';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport { MainPage } from './MainPage';\n\nexport function App(): JSX.Element {\n  const [selectedPokemons, setSelectedPokemons] = useState<[string, string]>([\n    '',\n    '',\n  ]);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path=\"/game/:pokemonOne/:pokemonTwo\"\n            render={({ match }) => <Game {...match.params} />}\n          />\n          <Route\n            path=\"/\"\n            render={() => (\n              <MainPage\n                selectedPokemons={selectedPokemons}\n                onChangePokemons={setSelectedPokemons}\n              />\n            )}\n          />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = async (onPerfEntry?: ReportHandler): Promise<void> => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    const { getCLS, getFID, getFCP, getLCP, getTTFB } = await import(\n      'web-vitals'\n    );\n\n    getCLS(onPerfEntry);\n    getFID(onPerfEntry);\n    getFCP(onPerfEntry);\n    getLCP(onPerfEntry);\n    getTTFB(onPerfEntry);\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// eslint-disable-next-line @typescript-eslint/no-floating-promises\nreportWebVitals();\n"],"sourceRoot":""}