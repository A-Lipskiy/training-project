{"version":3,"sources":["Ball.tsx","useFetchPokemon.tsx","PlayerCard.tsx","Score.tsx","Modal.tsx","Camera.tsx","Game.tsx","PokemonCard.tsx","useFetchPokemonsPages.tsx","PokemonsList.tsx","useIntersectionObserver.tsx","MainPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Ball","x","y","className","style","top","left","guard","rJSON","name","a","fetch","response","ok","Error","text","toString","json","height","weight","base_experience","sprites","useFetchPokemon","useQuery","fetchPokemon","enabled","PlayerCard","pokemonName","playerCardType","isLoading","pokemon","data","size","color","src","other","dream_world","front_default","Score","firstPlayer","secondPlayer","firstPlayerScore","secondPlayerScore","capitalize","Modal","winner","model","poseDetection","MoveNet","moveNetConfig","modelType","SINGLEPOSE_LIGHTNING","calculatePlayerCoord","newPlayerCoord","Math","floor","HALF_CARD_SIZE","Camera","onSetPlayer1Coord","onSetPlayer2Coord","useState","stream","setStream","cameraRef","useRef","detector","setDetector","isCameraOnScreen","setIsCameraOnScreen","useEffect","camera","current","srcObject","play","interval","setInterval","changePlayerCoord","clearInterval","video","estimatePoses","maxPoses","flipHorizontal","poses","length","player1Y","keypoints","player2Y","dispose","getTracks","forEach","track","stop","navigator","mediaDevices","getUserMedia","console","log","startVideo","initAI","type","checked","onChange","muted","autoPlay","ref","initialBallState","ballX","ballY","ballStepX","getArrayRandomElement","ballStepY","initialCardsState","initialScoreState","EFFECTIVE_HALF_CARD_SIZE","calculateCoordMinusStep","oldCoord","calculateCoordPlusStep","arr","random","strToCapitalize","charAt","toUpperCase","slice","Game","pokemonOne","pokemonTwo","ballState","setBallState","gameScore","setGameScore","player1Coord","setPlayer1Coord","player2Coord","setPlayer2Coord","isGameStarted","setIsGameStarted","isGamePaused","setIsGamePaused","setWinner","isRenderCamera","setIsRenderCamera","firstPlayerInt","secondPlayerInt","handleKeyUp","e","includes","key","handleKeyDown","handleStartGame","document","addEventListener","removeEventListener","prevState","setTimeout","to","onClick","PokemonCard","isSelected","fetchPokemonsList","pageNumber","truePageSize","count","results","queryFunction","pageParam","PokemonsList","selectedPokemons","bottomRef","useInfiniteQuery","getNextPageParam","lastPage","fetchNextPage","isFetchingNextPage","hasNextPage","elementRef","onIntersection","threshold","node","observer","IntersectionObserver","isIntersecting","observe","disconnect","useIntersectionObserver","pokemons","pages","flatMap","map","indexInSelectedPokemons","indexOf","newSelectedPokemons","splice","push","shift","handleClick","MainPage","onChangePokemons","queryClient","QueryClient","App","setSelectedPokemons","client","exact","path","render","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fafdb022.chunk.js","sourcesContent":["type Props = {\n  x: number;\n  y: number;\n};\n\nexport function Ball({ x, y }: Props): JSX.Element {\n  return (\n    <div\n      className=\"ball\"\n      style={{\n        top: `${y}%`,\n        left: `${x}%`,\n      }}\n    ></div>\n  );\n}\n","import type { PokeResponse } from './pokemonTypes.js';\nimport { useQuery, UseQueryResult } from 'react-query';\n\nconst guard = (rJSON: unknown): rJSON is PokeResponse =>\n  typeof rJSON === 'object' &&\n  rJSON !== null &&\n  'name' in rJSON &&\n  'height' in rJSON &&\n  'weight' in rJSON &&\n  'base_experience' in rJSON;\n\nasync function fetchPokemon(name: string) {\n  const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\n\n  if (!response.ok) throw new Error('Fetching error');\n  if (response.text.toString() === '') throw new Error('Response is empty');\n\n  const rJSON: unknown = await response.json();\n  if (guard(rJSON))\n    return {\n      name: rJSON.name,\n      height: rJSON.height,\n      weight: rJSON.weight,\n      base_experience: rJSON.base_experience,\n      sprites: rJSON.sprites,\n    };\n}\n\nexport const useFetchPokemon = (\n  name: string | undefined\n): UseQueryResult<PokeResponse, Error> =>\n  useQuery(\n    ['pokemon', name],\n    () => {\n      if (!name) throw new Error('No pokemon name');\n      return fetchPokemon(name);\n    },\n    {\n      enabled: !!name,\n    }\n  );\n","import { useFetchPokemon } from './useFetchPokemon';\nimport { BallSpinner } from 'react-spinners-kit';\n\ntype Props = {\n  y: number;\n  pokemonName: string;\n  playerCardType: 'left' | 'right';\n};\n\nexport function PlayerCard({\n  y,\n  pokemonName,\n  playerCardType,\n}: Props): JSX.Element {\n  const { isLoading, data: pokemon } = useFetchPokemon(pokemonName);\n  if (isLoading || !pokemon)\n    return (\n      <div className={`${playerCardType}-card`} style={{ top: `${y}%` }}>\n        <BallSpinner size={70} color=\"#6c5b7b\" />\n      </div>\n    );\n  return (\n    <div className={`${playerCardType}-card`} style={{ top: `${y}%` }}>\n      <img\n        className=\"player-card-image\"\n        src={pokemon.sprites.other.dream_world.front_default}\n      ></img>\n    </div>\n  );\n}\n","import { capitalize } from './Game';\ntype Props = {\n  firstPlayer: string;\n  secondPlayer: string;\n  firstPlayerScore: number;\n  secondPlayerScore: number;\n};\n\nexport function Score({\n  firstPlayer,\n  secondPlayer,\n  firstPlayerScore,\n  secondPlayerScore,\n}: Props): JSX.Element {\n  return (\n    <div className=\"score\">\n      <span className=\"first-player-score\">\n        {capitalize(firstPlayer)}: {firstPlayerScore}\n      </span>\n      <span className=\"second-player-score\">\n        {capitalize(secondPlayer)}: {secondPlayerScore}\n      </span>\n    </div>\n  );\n}\n","import { capitalize } from './Game';\ntype Props = { winner: string };\nexport function Modal({ winner }: Props): JSX.Element {\n  if (winner === '')\n    return (\n      <div className=\"modal\">\n        <div className=\"modal_content\">\n          <h3 className=\"modal-headers\">\n            Press \"W\" \"S\" buttons to move the left pokemon\n          </h3>\n          <h3 className=\"modal-headers\">\n            And \"O\" \"L\" buttons to move the right pokemon\n          </h3>\n          <h3 className=\"modal-headers\">\n            Or move your hands to control both pokemons :-)\n          </h3>\n        </div>\n      </div>\n    );\n  else\n    return (\n      <div className=\"modal\">\n        <div className=\"modal_content\">\n          <h1 className=\"modal-headers\">Game over</h1>\n          <h2 className=\"modal-headers\">{capitalize(winner)} win</h2>\n          <p>Press \"W\" \"S\" buttons to move the left pokemon</p>\n          <p>And \"O\" \"L\" buttons to move the left pokemon</p>\n          <p>Or move your hands to move both pokemons :-)</p>\n        </div>\n      </div>\n    );\n}\n","import { useEffect, useState, useRef } from 'react';\nimport * as poseDetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nimport { MoveNetModelConfig } from '@tensorflow-models/pose-detection';\nimport { HALF_CARD_SIZE } from './Game';\n\ntype Props = {\n  onSetPlayer1Coord: (y: number) => void;\n  onSetPlayer2Coord: (y: number) => void;\n};\nconst model = poseDetection.SupportedModels.MoveNet;\nconst moveNetConfig: MoveNetModelConfig = {\n  modelType: poseDetection.movenet.modelType.SINGLEPOSE_LIGHTNING,\n};\nconst THREASHOLD = 50;\nconst MAX_VALUE = 400;\n\nfunction calculatePlayerCoord(y: number): number {\n  const newPlayerCoord = Math.floor(\n    ((y - THREASHOLD) / (MAX_VALUE - 2 * THREASHOLD)) *\n      (100 - HALF_CARD_SIZE * 2)\n  );\n\n  if (newPlayerCoord < HALF_CARD_SIZE) return HALF_CARD_SIZE;\n  else if (newPlayerCoord > 100 - HALF_CARD_SIZE) return 100 - HALF_CARD_SIZE;\n  else return newPlayerCoord;\n}\nexport function Camera({\n  onSetPlayer1Coord,\n  onSetPlayer2Coord,\n}: Props): JSX.Element {\n  const [stream, setStream] = useState<MediaStream | null>(null);\n  const cameraRef = useRef<HTMLVideoElement>(null);\n  const [detector, setDetector] = useState<poseDetection.PoseDetector | null>(\n    null\n  );\n  const [isCameraOnScreen, setIsCameraOnScreen] = useState(true);\n\n  useEffect(() => {\n    const camera = cameraRef.current;\n\n    if (!stream || !camera) return;\n\n    camera.srcObject = stream;\n    camera.play();\n\n    async function changePlayerCoord(video: HTMLVideoElement): Promise<void> {\n      if (!detector) return;\n      const poses = await detector.estimatePoses(video, {\n        maxPoses: 1,\n        flipHorizontal: false,\n      });\n\n      if (poses.length !== 0) {\n        const player1Y = poses[0].keypoints[9].y;\n        const player2Y = poses[0].keypoints[10].y;\n\n        onSetPlayer1Coord(calculatePlayerCoord(player1Y));\n        onSetPlayer2Coord(calculatePlayerCoord(player2Y));\n      }\n    }\n\n    const interval = setInterval(() => {\n      changePlayerCoord(camera);\n    }, 100);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [detector, onSetPlayer1Coord, onSetPlayer2Coord, stream]);\n\n  useEffect(() => {\n    return () => detector?.dispose();\n  }, [detector]);\n\n  useEffect(() => {\n    return () => stream?.getTracks().forEach((track) => track.stop());\n  }, [stream]);\n\n  useEffect(() => {\n    async function startVideo() {\n      try {\n        setStream(\n          await navigator.mediaDevices.getUserMedia({\n            video: true,\n          })\n        );\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    async function initAI(): Promise<void> {\n      try {\n        setDetector(await poseDetection.createDetector(model, moveNetConfig));\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    startVideo();\n    initAI();\n  }, []);\n\n  return (\n    <div>\n      <label className=\"label-camera\">\n        Show camera:\n        <input\n          type=\"checkbox\"\n          checked={isCameraOnScreen}\n          onChange={() => setIsCameraOnScreen(!isCameraOnScreen)}\n        />\n      </label>\n      <video\n        muted\n        autoPlay\n        className={`camera ${!isCameraOnScreen ? 'display-none' : ''}`}\n        ref={cameraRef}\n      ></video>\n    </div>\n  );\n}\n","import { Link, Redirect } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Ball } from './Ball';\nimport { PlayerCard } from './PlayerCard';\nimport { Score } from './Score';\nimport { Modal } from './Modal';\nimport { Camera } from './Camera';\n\ntype TimeoutResult = ReturnType<typeof setTimeout> | null;\n\ntype Props = {\n  pokemonOne: string;\n  pokemonTwo: string;\n};\n\nconst initialBallState = {\n  ballX: 50,\n  ballY: 50,\n  ballStepX: getArrayRandomElement([-2, 2]),\n  ballStepY: getArrayRandomElement([-1, 1]),\n};\nconst initialCardsState = 50;\n\nconst initialScoreState = {\n  firstPlayerScore: 0,\n  secondPlayerScore: 0,\n};\n\nconst PLAYER_COORD_INTERVAL = 15;\nconst BALL_COORD_INTERVAL = 40;\nconst PLAYER_COORD_STEP = 2;\nexport const HALF_CARD_SIZE = 12;\nconst EFFECTIVE_HALF_CARD_SIZE = HALF_CARD_SIZE + 4;\n\nfunction calculateCoordMinusStep(oldCoord: number): number {\n  return oldCoord - HALF_CARD_SIZE > 0\n    ? oldCoord - PLAYER_COORD_STEP\n    : oldCoord;\n}\n\nfunction calculateCoordPlusStep(oldCoord: number): number {\n  return oldCoord + HALF_CARD_SIZE < 100\n    ? oldCoord + PLAYER_COORD_STEP\n    : oldCoord;\n}\nfunction getArrayRandomElement(arr: number[]): number {\n  const rand = Math.floor(Math.random() * arr.length);\n  return arr[rand];\n}\nexport function capitalize(strToCapitalize: string): string {\n  return strToCapitalize.charAt(0).toUpperCase() + strToCapitalize.slice(1);\n}\n\nexport function Game({ pokemonOne, pokemonTwo }: Props): JSX.Element {\n  const [ballState, setBallState] = useState(initialBallState);\n  const [gameScore, setGameScore] = useState(initialScoreState);\n  const [player1Coord, setPlayer1Coord] = useState(initialCardsState);\n  const [player2Coord, setPlayer2Coord] = useState(initialCardsState);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [isGamePaused, setIsGamePaused] = useState(false);\n  const [winner, setWinner] = useState<string | null>();\n  const [isRenderCamera, setIsRenderCamera] = useState(true);\n\n  useEffect(() => {\n    let firstPlayerInt: TimeoutResult = null;\n    let secondPlayerInt: TimeoutResult = null;\n    const handleKeyUp = (e?: KeyboardEvent) => {\n      if (\n        !e ||\n        ['w', 'W', 's', 'S', 'Ц', 'ц', 'і', 'І', 'Ы', 'ы'].includes(e.key)\n      ) {\n        if (firstPlayerInt) clearInterval(firstPlayerInt);\n        firstPlayerInt = null;\n      }\n      if (!e || ['o', 'O', 'l', 'L', 'щ', 'Щ', 'д', 'Д'].includes(e.key)) {\n        if (secondPlayerInt) clearInterval(secondPlayerInt);\n        secondPlayerInt = null;\n      }\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (['w', 'W', 'Ц', 'ц'].includes(e.key)) {\n        firstPlayerInt =\n          firstPlayerInt ||\n          setInterval(() => {\n            setPlayer1Coord(calculateCoordMinusStep);\n          }, PLAYER_COORD_INTERVAL);\n      } else if (['s', 'S', 'Ы', 'ы', 'І', 'і'].includes(e.key)) {\n        firstPlayerInt =\n          firstPlayerInt ||\n          setInterval(() => {\n            setPlayer1Coord(calculateCoordPlusStep);\n          }, PLAYER_COORD_INTERVAL);\n      } else if (['O', 'o', 'Щ', 'щ'].includes(e.key)) {\n        secondPlayerInt =\n          secondPlayerInt ||\n          setInterval(() => {\n            setPlayer2Coord(calculateCoordMinusStep);\n          }, PLAYER_COORD_INTERVAL);\n      } else if (['L', 'l', 'Д', 'д'].includes(e.key)) {\n        secondPlayerInt =\n          secondPlayerInt ||\n          setInterval(() => {\n            setPlayer2Coord(calculateCoordPlusStep);\n          }, PLAYER_COORD_INTERVAL);\n      }\n    };\n\n    const handleStartGame = (e: KeyboardEvent) => {\n      if (e.key === ' ') {\n        setIsGameStarted(true);\n        setIsGamePaused(false);\n        setWinner(null);\n      }\n    };\n    if (!isRenderCamera) {\n      setPlayer1Coord(initialCardsState);\n      setPlayer2Coord(initialCardsState);\n      document.addEventListener('keydown', handleKeyDown);\n      document.addEventListener('keyup', handleKeyUp);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n        document.removeEventListener('keyup', handleKeyUp);\n      };\n    }\n    document.addEventListener('keydown', handleStartGame);\n\n    return () => {\n      document.removeEventListener('keydown', handleStartGame);\n\n      handleKeyUp();\n    };\n  }, [isGameStarted, isRenderCamera]);\n\n  useEffect(() => {\n    if (!isGameStarted || isGamePaused) return;\n\n    const interval = setInterval(() => {\n      setBallState(({ ballX, ballY, ballStepX, ballStepY }) => {\n        return {\n          ballX: ballX + ballStepX,\n          ballY: ballY + ballStepY,\n          ballStepX:\n            ballX + ballStepX >= 100 || ballX + ballStepX <= 0\n              ? -ballStepX\n              : ballStepX,\n          ballStepY:\n            ballY + ballStepY >= 100 || ballY + ballStepY <= 0\n              ? -ballStepY\n              : ballStepY,\n        };\n      });\n    }, BALL_COORD_INTERVAL);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isGamePaused, isGameStarted]);\n\n  useEffect(() => {\n    const { ballX, ballY } = ballState;\n\n    if (ballX === 0) {\n      if (\n        ballY + EFFECTIVE_HALF_CARD_SIZE <= player1Coord ||\n        ballY - EFFECTIVE_HALF_CARD_SIZE >= player1Coord\n      ) {\n        setGameScore((prevState) => {\n          return {\n            ...prevState,\n            secondPlayerScore: prevState.secondPlayerScore + 1,\n          };\n        });\n      }\n    } else if (ballX === 100) {\n      if (\n        ballY + EFFECTIVE_HALF_CARD_SIZE <= player2Coord ||\n        ballY - EFFECTIVE_HALF_CARD_SIZE >= player2Coord\n      ) {\n        setGameScore((prevState) => {\n          return {\n            ...prevState,\n            firstPlayerScore: prevState.firstPlayerScore + 1,\n          };\n        });\n      }\n    }\n  }, [ballState, player1Coord, player2Coord]);\n\n  useEffect(() => {\n    if (\n      gameScore.firstPlayerScore === 10 ||\n      gameScore.secondPlayerScore === 10\n    ) {\n      setGameScore(initialScoreState);\n      setPlayer1Coord(initialCardsState);\n      setPlayer2Coord(initialCardsState);\n\n      setWinner(\n        gameScore.firstPlayerScore > gameScore.secondPlayerScore\n          ? pokemonOne\n          : pokemonTwo\n      );\n      setBallState({\n        ...initialBallState,\n        ballStepX: getArrayRandomElement([-2, 2]),\n        ballStepY: getArrayRandomElement([-1, 1]),\n      });\n      setIsGameStarted(false);\n    } else if (\n      gameScore.firstPlayerScore !== 0 ||\n      gameScore.secondPlayerScore !== 0\n    ) {\n      setBallState({\n        ...initialBallState,\n        ballStepX: getArrayRandomElement([-2, 2]),\n        ballStepY: getArrayRandomElement([-1, 1]),\n      });\n      setIsGamePaused(true);\n      setTimeout(() => setIsGamePaused(false), 1000);\n    }\n  }, [gameScore, pokemonOne, pokemonTwo]);\n\n  if (pokemonOne == '' || pokemonTwo == '') return <Redirect to=\"/\" />;\n  return (\n    <div className=\"page-wrapper\">\n      <label className=\"label-enable-camera\">\n        Enable camera:\n        <input\n          type=\"checkbox\"\n          checked={isRenderCamera}\n          onChange={() => setIsRenderCamera(!isRenderCamera)}\n        />\n      </label>\n      {isRenderCamera && (\n        <Camera\n          onSetPlayer1Coord={setPlayer1Coord}\n          onSetPlayer2Coord={setPlayer2Coord}\n        />\n      )}\n      {!isGameStarted && <Modal winner={winner ? winner : ''} />}\n\n      <Link to=\"/\">\n        <button className=\"button-close-game\">Close game</button>\n      </Link>\n      <h1 className=\"header-text\">Pokemons ping-pong</h1>\n      <Score\n        firstPlayer={pokemonOne}\n        secondPlayer={pokemonTwo}\n        firstPlayerScore={gameScore.firstPlayerScore}\n        secondPlayerScore={gameScore.secondPlayerScore}\n      />\n      <div className=\"ui-field\">\n        <div className=\"dotted-line\"></div>\n        <div className=\"game-field\">\n          <Ball x={ballState.ballX} y={ballState.ballY} />\n        </div>\n        <PlayerCard\n          y={player1Coord}\n          pokemonName={pokemonOne}\n          playerCardType=\"left\"\n        />\n        <PlayerCard\n          y={player2Coord}\n          pokemonName={pokemonTwo}\n          playerCardType=\"right\"\n        />\n      </div>\n      <button\n        className={`button-start-game ${\n          !isGameStarted ? 'button-visible' : ''\n        }`}\n        onClick={() => {\n          setIsGameStarted(true);\n          setIsGamePaused(false);\n          setWinner(null);\n        }}\n      >\n        Start Game\n      </button>\n    </div>\n  );\n}\n","import { BallSpinner } from 'react-spinners-kit';\nimport { useFetchPokemon } from './useFetchPokemon';\n\ntype Props = {\n  name: string | undefined;\n  onClick: () => void;\n  isSelected: boolean;\n};\n\nexport function PokemonCard({ name, onClick, isSelected }: Props): JSX.Element {\n  const { isLoading, data: pokemon } = useFetchPokemon(name);\n  if (isLoading || !pokemon)\n    return (\n      <div className=\"card-wrapper\">\n        <BallSpinner size={200} color=\"#f8b195\" />\n      </div>\n    );\n\n  return (\n    <div\n      className={`card-wrapper ${isSelected ? 'selected' : ''}`}\n      onClick={onClick}\n    >\n      <span className=\"block-span\">Name: {pokemon.name}</span>\n      <span className=\"block-span\">Height: {pokemon.height}</span>\n      <span className=\"block-span\">Weight: {pokemon.weight}</span>\n      <span className=\"block-span\">\n        Base experience: {pokemon.base_experience}\n      </span>\n      <img\n        className=\"pokemon-image\"\n        src={pokemon.sprites.other.dream_world.front_default}\n      ></img>\n    </div>\n  );\n}\n","import type { PokeListResponse } from './pokemonTypes.js';\nimport { truePageSize } from './PokemonsList';\nimport { useInfiniteQuery, UseInfiniteQueryResult } from 'react-query';\n\nconst guard = (rJSON: unknown): rJSON is PokeListResponse =>\n  typeof rJSON === 'object' &&\n  rJSON !== null &&\n  'count' in rJSON &&\n  'results' in rJSON;\n\nasync function fetchPokemonsList(\n  pageNumber = 0\n): Promise<PokeListResponse & { pageNumber: number }> {\n  const response = await fetch(\n    `https://pokeapi.co/api/v2/pokemon?offset=${\n      pageNumber * truePageSize\n    }&limit=${truePageSize}`\n  );\n\n  if (!response.ok) throw new Error('Fetching error');\n  if (response.text.toString() === '') throw new Error('Response is empty');\n\n  const rJSON: unknown = await response.json();\n  if (guard(rJSON)) {\n    return {\n      count: rJSON.count,\n      results: rJSON.results,\n      pageNumber,\n    };\n  }\n\n  throw new Error('Fetched Invalid Data!');\n}\n\nconst queryFunction = async ({ pageParam = 0 }: { pageParam?: number }) => {\n  return fetchPokemonsList(pageParam);\n};\n\nexport const useFetchPokemonsPages = (): UseInfiniteQueryResult<\n  PokeListResponse,\n  Error\n> =>\n  useInfiniteQuery(['pokemon-list'], queryFunction, {\n    getNextPageParam: (lastPage) => {\n      const page = lastPage.pageNumber + 1;\n      if (page * truePageSize < lastPage.count) return lastPage.pageNumber + 1;\n      return undefined;\n    },\n  });\n","import { PokemonCard } from './PokemonCard';\nimport { useIntersectionObserver } from './useIntersectionObserver';\nimport { useRef } from 'react';\nimport { useFetchPokemonsPages } from './useFetchPokemonsPages';\n\nexport const truePageSize = 10;\n\ntype Props = {\n  selectedPokemons: [string, string];\n  onChange: (pokemons: [string, string]) => void;\n};\n\nexport function PokemonsList({\n  selectedPokemons,\n  onChange,\n}: Props): JSX.Element {\n  const bottomRef = useRef<HTMLDivElement>(null);\n\n  const { data, fetchNextPage, isFetchingNextPage, hasNextPage } =\n    useFetchPokemonsPages();\n\n  useIntersectionObserver(\n    bottomRef,\n    () => !isFetchingNextPage && fetchNextPage(),\n    0\n  );\n\n  function handleClick(name: string): void {\n    const indexInSelectedPokemons = selectedPokemons.indexOf(name);\n    const newSelectedPokemons: [string, string] = [...selectedPokemons];\n    if (indexInSelectedPokemons > -1) {\n      newSelectedPokemons.splice(indexInSelectedPokemons, 1);\n    } else {\n      newSelectedPokemons.push(name);\n      if (newSelectedPokemons.length > 2) {\n        newSelectedPokemons.shift();\n      }\n    }\n    onChange(newSelectedPokemons);\n  }\n  const pokemons = data?.pages\n    .flatMap((pokemon) => pokemon.results)\n    .map(({ name }) => (\n      <PokemonCard\n        key={name}\n        name={name}\n        isSelected={selectedPokemons.includes(name)}\n        onClick={() => handleClick(name)}\n      />\n    ));\n\n  if (hasNextPage) {\n    return (\n      <div className=\"pokemon-list-wrapper\">\n        {pokemons}\n        <div ref={bottomRef} className=\"bottom-ref-element\" />\n      </div>\n    );\n  } else {\n    return <div className=\"pokemon-list-wrapper\">{pokemons}</div>;\n  }\n}\n","import { RefObject, useEffect } from 'react';\n\nexport function useIntersectionObserver(\n  elementRef: RefObject<Element>,\n  onIntersection: () => unknown,\n  threshold = 0\n): void {\n  useEffect(() => {\n    const node = elementRef?.current;\n    if (!node) return;\n    const observer = new IntersectionObserver(\n      ([entry]) => entry.isIntersecting && onIntersection(),\n      {\n        threshold,\n      }\n    );\n    observer.observe(node);\n\n    return () => observer.disconnect();\n  }, [elementRef, threshold, onIntersection]);\n}\n","import { PokemonsList } from './PokemonsList';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  selectedPokemons: [string, string];\n  onChangePokemons: (pokemons: [string, string]) => void;\n};\nexport function MainPage({\n  selectedPokemons,\n  onChangePokemons,\n}: Props): JSX.Element {\n  return (\n    <div className=\"page-wrapper\">\n      <h1 className=\"header-text\">Choose two pokemons</h1>\n      <PokemonsList\n        selectedPokemons={selectedPokemons}\n        onChange={onChangePokemons}\n      />\n      <Link to={`/game/${selectedPokemons[0]}/${selectedPokemons[1]}`}>\n        <button\n          className={`button-start-game ${\n            selectedPokemons.length === 2 && !selectedPokemons.includes('')\n              ? 'button-visible'\n              : ''\n          }`}\n        >\n          Start Game\n        </button>\n      </Link>\n    </div>\n  );\n}\n","import { Game } from './Game';\nimport './App.css';\nimport { useState } from 'react';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport { MainPage } from './MainPage';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst queryClient = new QueryClient();\n\nexport function App(): JSX.Element {\n  const [selectedPokemons, setSelectedPokemons] = useState<[string, string]>([\n    '',\n    '',\n  ]);\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <div className=\"App\">\n        <BrowserRouter>\n          <Switch>\n            <Route\n              exact\n              path=\"/game/:pokemonOne/:pokemonTwo\"\n              render={({ match }) => <Game {...match.params} />}\n            />\n            <Route\n              path=\"/\"\n              render={() => (\n                <MainPage\n                  selectedPokemons={selectedPokemons}\n                  onChangePokemons={setSelectedPokemons}\n                />\n              )}\n            />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </QueryClientProvider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = async (onPerfEntry?: ReportHandler): Promise<void> => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    const { getCLS, getFID, getFCP, getLCP, getTTFB } = await import(\n      'web-vitals'\n    );\n\n    getCLS(onPerfEntry);\n    getFID(onPerfEntry);\n    getFCP(onPerfEntry);\n    getLCP(onPerfEntry);\n    getTTFB(onPerfEntry);\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// eslint-disable-next-line @typescript-eslint/no-floating-promises\nreportWebVitals();\n"],"sourceRoot":""}