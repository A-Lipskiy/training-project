{"version":3,"sources":["Ball.tsx","useFetchPokemon.tsx","PlayerCard.tsx","Score.tsx","Modal.tsx","Camera.tsx","Game.tsx","PokemonCard.tsx","useFetchPokemonsPages.tsx","PokemonsList.tsx","useIntersectionObserver.tsx","MainPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Ball","x","y","className","style","top","left","name","onSetData","a","fetch","response","json","rJSON","guard","height","weight","base_experience","sprites","console","log","useFetchPokemon","useState","isLoading","setIsLoading","pokemon","setPokemon","useEffect","isUnmounted","fetchPokemon","poke","PlayerCard","pokemonName","playerCardType","size","color","src","other","dream_world","front_default","Score","firstPlayer","secondPlayer","firstPlayerScore","secondPlayerScore","capitalize","Modal","winner","model","poseDetection","MoveNet","moveNetConfig","modelType","SINGLEPOSE_LIGHTNING","calculatePlayerCoord","newPlayerCoord","Math","floor","HALF_CARD_SIZE","Camera","onSetPlayer1Coord","onSetPlayer2Coord","stream","setStream","cameraRef","useRef","detector","setDetector","isCameraOnScreen","setIsCameraOnScreen","camera","current","srcObject","play","interval","setInterval","changePlayerCoord","clearInterval","video","estimatePoses","maxPoses","flipHorizontal","poses","length","player1Y","keypoints","player2Y","dispose","getTracks","forEach","track","stop","navigator","mediaDevices","getUserMedia","startVideo","initAI","type","checked","onClick","muted","autoPlay","ref","initialBallState","ballX","ballY","ballStepX","getArrayRandomElement","ballStepY","initialScoreState","EFFECTIVE_HALF_CARD_SIZE","calculateCoordMinusStep","oldCoord","calculateCoordPlusStep","arr","random","strToCapitalize","charAt","toUpperCase","slice","Game","pokemonOne","pokemonTwo","ballState","setBallState","gameScore","setGameScore","player1Coord","setPlayer1Coord","player2Coord","setPlayer2Coord","isGameStarted","setIsGameStarted","isGamePaused","setIsGamePaused","setWinner","isRenderCamera","setIsRenderCamera","firstPlayerInt","secondPlayerInt","handleKeyUp","e","includes","key","handleKeyDown","handleStartGame","document","addEventListener","removeEventListener","prevState","setTimeout","to","PokemonCard","isSelected","fetchPokemonsList","pageNumber","truePageSize","page","count","results","Error","useFetchPokemonsPages","pagesToUpload","setPages","curentLastPage","pages","setPagesToUpload","Array","fill","map","index","pokemonsPagesPromise","pokemons","Promise","all","pokemonsPages","oldPages","result","push","initialPageCount","round","window","innerHeight","PokemonsList","selectedPokemons","onChange","setCurentLastPage","bottomRef","elementRef","onIntersection","threshold","entry","setEntry","node","observer","IntersectionObserver","observe","disconnect","isIntersecting","useIntersectionObserver","useCallback","flatMap","indexInSelectedPokemons","indexOf","newSelectedPokemons","splice","shift","handleClick","undefined","MainPage","onChangePokemons","App","setSelectedPokemons","exact","path","render","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9c46532e.chunk.js","sourcesContent":["type Props = {\n  x: number;\n  y: number;\n};\n\nexport function Ball({ x, y }: Props): JSX.Element {\n  return (\n    <div\n      className=\"ball\"\n      style={{\n        top: `${y}%`,\n        left: `${x}%`,\n      }}\n    ></div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport type { PokeResponse } from './pokemonTypes.js';\n\nasync function fetchPokemon(\n  name: string,\n  onSetData: (pokemon: PokeResponse) => void\n) {\n  try {\n    const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`);\n    const rJSON: unknown = await response.json();\n    const guard = (rJSON: unknown): rJSON is PokeResponse =>\n      typeof rJSON === 'object' &&\n      rJSON !== null &&\n      'name' in rJSON &&\n      'height' in rJSON &&\n      'weight' in rJSON &&\n      'base_experience' in rJSON;\n    if (guard(rJSON)) {\n      onSetData({\n        name: rJSON.name,\n        height: rJSON.height,\n        weight: rJSON.weight,\n        base_experience: rJSON.base_experience,\n        sprites: rJSON.sprites,\n      });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport const useFetchPokemon = (\n  name: string | undefined\n): { isLoading: boolean; pokemon: PokeResponse | undefined } => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [pokemon, setPokemon] = useState<PokeResponse | undefined>();\n\n  useEffect(() => {\n    let isUnmounted = false;\n    if (name) {\n      setIsLoading(true);\n      fetchPokemon(name, (poke) => {\n        if (isUnmounted) return;\n        setPokemon(poke);\n        setIsLoading(false);\n      });\n    }\n    return () => {\n      isUnmounted = true;\n    };\n  }, [name]);\n\n  return { isLoading, pokemon };\n};\n","import { useFetchPokemon } from './useFetchPokemon';\nimport { BallSpinner } from 'react-spinners-kit';\n\ntype Props = {\n  y: number;\n  pokemonName: string;\n  playerCardType: 'left' | 'right';\n};\n\nexport function PlayerCard({\n  y,\n  pokemonName,\n  playerCardType,\n}: Props): JSX.Element {\n  const { isLoading, pokemon } = useFetchPokemon(pokemonName);\n  if (isLoading || !pokemon)\n    return (\n      <div className={`${playerCardType}-card`} style={{ top: `${y}%` }}>\n        <BallSpinner size={70} color=\"#6c5b7b\" />\n      </div>\n    );\n  return (\n    <div className={`${playerCardType}-card`} style={{ top: `${y}%` }}>\n      <img\n        className=\"player-card-image\"\n        src={pokemon.sprites.other.dream_world.front_default}\n      ></img>\n    </div>\n  );\n}\n","import { capitalize } from './Game';\ntype Props = {\n  firstPlayer: string;\n  secondPlayer: string;\n  firstPlayerScore: number;\n  secondPlayerScore: number;\n};\n\nexport function Score({\n  firstPlayer,\n  secondPlayer,\n  firstPlayerScore,\n  secondPlayerScore,\n}: Props): JSX.Element {\n  return (\n    <div className=\"score\">\n      <span className=\"first-player-score\">\n        {capitalize(firstPlayer)}: {firstPlayerScore}\n      </span>\n      <span className=\"second-player-score\">\n        {capitalize(secondPlayer)}: {secondPlayerScore}\n      </span>\n    </div>\n  );\n}\n","import { capitalize } from './Game';\ntype Props = { winner: string };\nexport function Modal({ winner }: Props): JSX.Element {\n  if (winner === '')\n    return (\n      <div className=\"modal\">\n        <div className=\"modal_content\">\n          <h3 className=\"modal-headers\">\n            Press \"W\" \"S\" buttons to move the left pokemon\n          </h3>\n          <h3 className=\"modal-headers\">\n            And \"O\" \"L\" buttons to move the right pokemon\n          </h3>\n          <h3 className=\"modal-headers\">\n            Or move your hands to control both pokemons :-)\n          </h3>\n        </div>\n      </div>\n    );\n  else\n    return (\n      <div className=\"modal\">\n        <div className=\"modal_content\">\n          <h1 className=\"modal-headers\">Game over</h1>\n          <h2 className=\"modal-headers\">{capitalize(winner)} win</h2>\n          <p>Press \"W\" \"S\" buttons to move the left pokemon</p>\n          <p>And \"O\" \"L\" buttons to move the left pokemon</p>\n          <p>Or move your hands to move both pokemons :-)</p>\n        </div>\n      </div>\n    );\n}\n","import { useEffect, useState, useRef } from 'react';\nimport * as poseDetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nimport { MoveNetModelConfig } from '@tensorflow-models/pose-detection';\nimport { HALF_CARD_SIZE } from './Game';\n\ntype Props = {\n  onSetPlayer1Coord: (y: number) => void;\n  onSetPlayer2Coord: (y: number) => void;\n};\nconst model = poseDetection.SupportedModels.MoveNet;\nconst moveNetConfig: MoveNetModelConfig = {\n  modelType: poseDetection.movenet.modelType.SINGLEPOSE_LIGHTNING,\n};\nconst THREASHOLD = 50;\nconst MAX_VALUE = 400;\n\nfunction calculatePlayerCoord(y: number): number {\n  const newPlayerCoord = Math.floor(\n    ((y - THREASHOLD) / (MAX_VALUE - 2 * THREASHOLD)) *\n      (100 - HALF_CARD_SIZE * 2)\n  );\n\n  if (newPlayerCoord < HALF_CARD_SIZE) return HALF_CARD_SIZE;\n  else if (newPlayerCoord > 100 - HALF_CARD_SIZE) return 100 - HALF_CARD_SIZE;\n  else return newPlayerCoord;\n}\nexport function Camera({\n  onSetPlayer1Coord,\n  onSetPlayer2Coord,\n}: Props): JSX.Element {\n  const [stream, setStream] = useState<MediaStream | null>(null);\n  const cameraRef = useRef<HTMLVideoElement>(null);\n  const [detector, setDetector] = useState<poseDetection.PoseDetector | null>(\n    null\n  );\n  const [isCameraOnScreen, setIsCameraOnScreen] = useState(true);\n\n  useEffect(() => {\n    const camera = cameraRef.current;\n\n    if (!stream || !camera) return;\n\n    camera.srcObject = stream;\n    camera.play();\n\n    async function changePlayerCoord(video: HTMLVideoElement): Promise<void> {\n      if (!detector) return;\n      const poses = await detector.estimatePoses(video, {\n        maxPoses: 1,\n        flipHorizontal: false,\n      });\n\n      if (poses.length !== 0) {\n        const player1Y = poses[0].keypoints[9].y;\n        const player2Y = poses[0].keypoints[10].y;\n\n        onSetPlayer1Coord(calculatePlayerCoord(player1Y));\n        onSetPlayer2Coord(calculatePlayerCoord(player2Y));\n      }\n    }\n\n    const interval = setInterval(() => {\n      changePlayerCoord(camera);\n    }, 100);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [detector, onSetPlayer1Coord, onSetPlayer2Coord, stream]);\n\n  useEffect(() => {\n    return () => detector?.dispose();\n  }, [detector]);\n\n  useEffect(() => {\n    return () => stream?.getTracks().forEach((track) => track.stop());\n  }, [stream]);\n\n  useEffect(() => {\n    async function startVideo() {\n      try {\n        setStream(\n          await navigator.mediaDevices.getUserMedia({\n            video: true,\n          })\n        );\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    async function initAI(): Promise<void> {\n      try {\n        setDetector(await poseDetection.createDetector(model, moveNetConfig));\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    startVideo();\n    initAI();\n  }, []);\n\n  return (\n    <div>\n      <label className=\"label-camera\">\n        Show camera:\n        <input\n          type=\"checkbox\"\n          checked={isCameraOnScreen}\n          onClick={() => setIsCameraOnScreen(!isCameraOnScreen)}\n        />\n      </label>\n      <video\n        muted\n        autoPlay\n        className={`camera ${!isCameraOnScreen ? 'display-none' : ''}`}\n        ref={cameraRef}\n      ></video>\n    </div>\n  );\n}\n","import { Link, Redirect } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Ball } from './Ball';\nimport { PlayerCard } from './PlayerCard';\nimport { Score } from './Score';\nimport { Modal } from './Modal';\nimport { Camera } from './Camera';\n\ntype TimeoutResult = ReturnType<typeof setTimeout> | null;\n\ntype Props = {\n  pokemonOne: string;\n  pokemonTwo: string;\n};\n\nconst initialBallState = {\n  ballX: 50,\n  ballY: 50,\n  ballStepX: getArrayRandomElement([-2, 2]),\n  ballStepY: getArrayRandomElement([-1, 1]),\n};\nconst initialCardsState = 50;\n\nconst initialScoreState = {\n  firstPlayerScore: 0,\n  secondPlayerScore: 0,\n};\n\nconst PLAYER_COORD_INTERVAL = 15;\nconst BALL_COORD_INTERVAL = 40;\nconst PLAYER_COORD_STEP = 2;\nexport const HALF_CARD_SIZE = 12;\nconst EFFECTIVE_HALF_CARD_SIZE = HALF_CARD_SIZE + 4;\n\nfunction calculateCoordMinusStep(oldCoord: number): number {\n  return oldCoord - HALF_CARD_SIZE > 0\n    ? oldCoord - PLAYER_COORD_STEP\n    : oldCoord;\n}\n\nfunction calculateCoordPlusStep(oldCoord: number): number {\n  return oldCoord + HALF_CARD_SIZE < 100\n    ? oldCoord + PLAYER_COORD_STEP\n    : oldCoord;\n}\nfunction getArrayRandomElement(arr: number[]): number {\n  const rand = Math.floor(Math.random() * arr.length);\n  return arr[rand];\n}\nexport function capitalize(strToCapitalize: string): string {\n  return strToCapitalize.charAt(0).toUpperCase() + strToCapitalize.slice(1);\n}\n\nexport function Game({ pokemonOne, pokemonTwo }: Props): JSX.Element {\n  const [ballState, setBallState] = useState(initialBallState);\n  const [gameScore, setGameScore] = useState(initialScoreState);\n  const [player1Coord, setPlayer1Coord] = useState(initialCardsState);\n  const [player2Coord, setPlayer2Coord] = useState(initialCardsState);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [isGamePaused, setIsGamePaused] = useState(false);\n  const [winner, setWinner] = useState<string | null>();\n  const [isRenderCamera, setIsRenderCamera] = useState(true);\n\n  useEffect(() => {\n    let firstPlayerInt: TimeoutResult = null;\n    let secondPlayerInt: TimeoutResult = null;\n    const handleKeyUp = (e?: KeyboardEvent) => {\n      if (\n        !e ||\n        ['w', 'W', 's', 'S', 'Ц', 'ц', 'і', 'І', 'Ы', 'ы'].includes(e.key)\n      ) {\n        if (firstPlayerInt) clearInterval(firstPlayerInt);\n        firstPlayerInt = null;\n      }\n      if (!e || ['o', 'O', 'l', 'L', 'щ', 'Щ', 'д', 'Д'].includes(e.key)) {\n        if (secondPlayerInt) clearInterval(secondPlayerInt);\n        secondPlayerInt = null;\n      }\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (['w', 'W', 'Ц', 'ц'].includes(e.key)) {\n        firstPlayerInt =\n          firstPlayerInt ||\n          setInterval(() => {\n            setPlayer1Coord(calculateCoordMinusStep);\n          }, PLAYER_COORD_INTERVAL);\n      } else if (['s', 'S', 'Ы', 'ы', 'І', 'і'].includes(e.key)) {\n        firstPlayerInt =\n          firstPlayerInt ||\n          setInterval(() => {\n            setPlayer1Coord(calculateCoordPlusStep);\n          }, PLAYER_COORD_INTERVAL);\n      } else if (['O', 'o', 'Щ', 'щ'].includes(e.key)) {\n        secondPlayerInt =\n          secondPlayerInt ||\n          setInterval(() => {\n            setPlayer2Coord(calculateCoordMinusStep);\n          }, PLAYER_COORD_INTERVAL);\n      } else if (['L', 'l', 'Д', 'д'].includes(e.key)) {\n        secondPlayerInt =\n          secondPlayerInt ||\n          setInterval(() => {\n            setPlayer2Coord(calculateCoordPlusStep);\n          }, PLAYER_COORD_INTERVAL);\n      }\n    };\n\n    const handleStartGame = (e: KeyboardEvent) => {\n      if (e.key === ' ') {\n        setIsGameStarted(true);\n        setIsGamePaused(false);\n        setWinner(null);\n      }\n    };\n    if (!isRenderCamera) {\n      document.addEventListener('keydown', handleKeyDown);\n      document.addEventListener('keyup', handleKeyUp);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n        document.removeEventListener('keyup', handleKeyUp);\n      };\n    }\n    document.addEventListener('keydown', handleStartGame);\n\n    return () => {\n      document.removeEventListener('keydown', handleStartGame);\n\n      handleKeyUp();\n    };\n  }, [isGameStarted, isRenderCamera]);\n\n  useEffect(() => {\n    if (!isGameStarted || isGamePaused) return;\n\n    const interval = setInterval(() => {\n      setBallState(({ ballX, ballY, ballStepX, ballStepY }) => {\n        return {\n          ballX: ballX + ballStepX,\n          ballY: ballY + ballStepY,\n          ballStepX:\n            ballX + ballStepX >= 100 || ballX + ballStepX <= 0\n              ? -ballStepX\n              : ballStepX,\n          ballStepY:\n            ballY + ballStepY >= 100 || ballY + ballStepY <= 0\n              ? -ballStepY\n              : ballStepY,\n        };\n      });\n    }, BALL_COORD_INTERVAL);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isGamePaused, isGameStarted]);\n\n  useEffect(() => {\n    const { ballX, ballY } = ballState;\n\n    if (ballX === 0) {\n      if (\n        ballY + EFFECTIVE_HALF_CARD_SIZE <= player1Coord ||\n        ballY - EFFECTIVE_HALF_CARD_SIZE >= player1Coord\n      ) {\n        setGameScore((prevState) => {\n          return {\n            ...prevState,\n            secondPlayerScore: prevState.secondPlayerScore + 1,\n          };\n        });\n      }\n    } else if (ballX === 100) {\n      if (\n        ballY + EFFECTIVE_HALF_CARD_SIZE <= player2Coord ||\n        ballY - EFFECTIVE_HALF_CARD_SIZE >= player2Coord\n      ) {\n        setGameScore((prevState) => {\n          return {\n            ...prevState,\n            firstPlayerScore: prevState.firstPlayerScore + 1,\n          };\n        });\n      }\n    }\n  }, [ballState, player1Coord, player2Coord]);\n\n  useEffect(() => {\n    if (\n      gameScore.firstPlayerScore === 10 ||\n      gameScore.secondPlayerScore === 10\n    ) {\n      setGameScore(initialScoreState);\n      setPlayer1Coord(initialCardsState);\n      setPlayer2Coord(initialCardsState);\n\n      setWinner(\n        gameScore.firstPlayerScore > gameScore.secondPlayerScore\n          ? pokemonOne\n          : pokemonTwo\n      );\n      setBallState({\n        ...initialBallState,\n        ballStepX: getArrayRandomElement([-2, 2]),\n        ballStepY: getArrayRandomElement([-1, 1]),\n      });\n      setIsGameStarted(false);\n    } else if (\n      gameScore.firstPlayerScore !== 0 ||\n      gameScore.secondPlayerScore !== 0\n    ) {\n      setBallState({\n        ...initialBallState,\n        ballStepX: getArrayRandomElement([-2, 2]),\n        ballStepY: getArrayRandomElement([-1, 1]),\n      });\n      setIsGamePaused(true);\n      setTimeout(() => setIsGamePaused(false), 1000);\n    }\n  }, [gameScore, pokemonOne, pokemonTwo]);\n\n  if (pokemonOne == '' || pokemonTwo == '') return <Redirect to=\"/\" />;\n  return (\n    <div className=\"page-wrapper\">\n      <label className=\"label-enable-camera\">\n        Enable camera:\n        <input\n          type=\"checkbox\"\n          checked={isRenderCamera}\n          onClick={() => setIsRenderCamera(!isRenderCamera)}\n        />\n      </label>\n      {isRenderCamera && (\n        <Camera\n          onSetPlayer1Coord={setPlayer1Coord}\n          onSetPlayer2Coord={setPlayer2Coord}\n        />\n      )}\n      {!isGameStarted && <Modal winner={winner ? winner : ''} />}\n\n      <Link to=\"/\">\n        <button className=\"button-close-game\">Close game</button>\n      </Link>\n      <h1 className=\"header-text\">Pokemons ping-pong</h1>\n      <Score\n        firstPlayer={pokemonOne}\n        secondPlayer={pokemonTwo}\n        firstPlayerScore={gameScore.firstPlayerScore}\n        secondPlayerScore={gameScore.secondPlayerScore}\n      />\n      <div className=\"ui-field\">\n        <div className=\"dotted-line\"></div>\n        <div className=\"game-field\">\n          <Ball x={ballState.ballX} y={ballState.ballY} />\n        </div>\n        <PlayerCard\n          y={player1Coord}\n          pokemonName={pokemonOne}\n          playerCardType=\"left\"\n        />\n        <PlayerCard\n          y={player2Coord}\n          pokemonName={pokemonTwo}\n          playerCardType=\"right\"\n        />\n      </div>\n      <button\n        className={`button-start-game ${\n          !isGameStarted ? 'button-visible' : ''\n        }`}\n        onClick={() => {\n          setIsGameStarted(true);\n          setIsGamePaused(false);\n          setWinner(null);\n        }}\n      >\n        Start Game\n      </button>\n    </div>\n  );\n}\n","import { BallSpinner } from 'react-spinners-kit';\nimport { useFetchPokemon } from './useFetchPokemon';\n\ntype Props = {\n  name: string | undefined;\n  onClick: () => void;\n  isSelected: boolean;\n};\n\nexport function PokemonCard({ name, onClick, isSelected }: Props): JSX.Element {\n  const { isLoading, pokemon } = useFetchPokemon(name);\n  if (isLoading || !pokemon)\n    return (\n      <div className=\"card-wrapper\">\n        <BallSpinner size={200} color=\"#f8b195\" />\n      </div>\n    );\n\n  return (\n    <div\n      className={`card-wrapper ${isSelected ? 'selected' : ''}`}\n      onClick={onClick}\n    >\n      <span className=\"block-span\">Name: {pokemon.name}</span>\n      <span className=\"block-span\">Height: {pokemon.height}</span>\n      <span className=\"block-span\">Weight: {pokemon.weight}</span>\n      <span className=\"block-span\">\n        Base experience: {pokemon.base_experience}\n      </span>\n      <img\n        className=\"pokemon-image\"\n        src={pokemon.sprites.other.dream_world.front_default}\n      ></img>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport type { PokeListResponse } from './pokemonTypes.js';\nimport { truePageSize } from './PokemonsList';\n\nasync function fetchPokemonsList(\n  pageNumber: number\n): Promise<{ count: number; results: Array<{ name: string; url: string }> }> {\n  try {\n    const response = await fetch(\n      `https://pokeapi.co/api/v2/pokemon?offset=${\n        pageNumber * truePageSize\n      }&limit=${truePageSize}`\n    );\n    const rJSON: unknown = await response.json();\n    const guard = (rJSON: unknown): rJSON is PokeListResponse =>\n      typeof rJSON === 'object' &&\n      rJSON !== null &&\n      'count' in rJSON &&\n      'results' in rJSON;\n    if (guard(rJSON)) {\n      const page = {\n        count: rJSON.count,\n        results: rJSON.results,\n      };\n      return page;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  throw new Error(`Can't fetch page ${pageNumber}`);\n}\nexport const useFetchPokemonsPages = async (\n  pagesToUpload: number[],\n  setPages: React.Dispatch<React.SetStateAction<PokeListResponse[]>>,\n  curentLastPage: number,\n  pages: PokeListResponse[],\n  setPagesToUpload: React.Dispatch<React.SetStateAction<number[]>>\n): Promise<PokeListResponse[] | undefined> => {\n  useEffect(() => {\n    const pagesToUpload = new Array<number>(curentLastPage - pages.length)\n      .fill(pages.length)\n      .map((length, index) => length + index);\n\n    setPagesToUpload(pagesToUpload);\n  }, [curentLastPage, pages, setPagesToUpload]);\n\n  try {\n    const pokemonsPagesPromise = pagesToUpload.map(async (pageNumber) => {\n      const pokemons = await fetchPokemonsList(pageNumber);\n\n      return {\n        pageNumber,\n        pokemons,\n      };\n    });\n\n    const pokemonsPages = await Promise.all(pokemonsPagesPromise);\n    if (pagesToUpload.length === 0) return;\n    setPages((oldPages) => {\n      const result = [...oldPages];\n\n      for (const { pokemons, pageNumber } of pokemonsPages) {\n        if (result[pageNumber]) result[pageNumber] = pokemons;\n        else result.push(pokemons);\n      }\n\n      return result;\n    });\n  } catch (e) {\n    console.log({ e });\n  }\n};\n","import { PokemonCard } from './PokemonCard';\nimport { useIntersectionObserver } from './useIntersectionObserver';\nimport { useState, useRef, useCallback } from 'react';\nimport { useFetchPokemonsPages } from './useFetchPokemonsPages';\nimport type { PokeListResponse } from './pokemonTypes.js';\n\nexport const truePageSize = 10;\n\nconst initialPageCount =\n  Math.floor((Math.round(window.innerHeight / 300) + 1) / truePageSize) + 1;\n\ntype Props = {\n  selectedPokemons: [string, string];\n  onChange: (pokemons: [string, string]) => void;\n};\n\nexport function PokemonsList({\n  selectedPokemons,\n  onChange,\n}: Props): JSX.Element {\n  const [curentLastPage, setCurentLastPage] = useState(initialPageCount);\n  const [pagesToUpload, setPagesToUpload] = useState<number[]>([]);\n  const [pages, setPages] = useState<PokeListResponse[]>([]);\n  const bottomRef = useRef<HTMLDivElement>(null);\n\n  const updatePageCount = useCallback(() => {\n    setCurentLastPage((page) => page + 1);\n  }, []);\n\n  useIntersectionObserver(bottomRef, updatePageCount, 0);\n\n  useFetchPokemonsPages(\n    pagesToUpload,\n    setPages,\n    curentLastPage,\n    pages,\n    setPagesToUpload\n  );\n\n  function handleClick(name: string): void {\n    const indexInSelectedPokemons = selectedPokemons.indexOf(name);\n    const newSelectedPokemons: [string, string] = [...selectedPokemons];\n    if (indexInSelectedPokemons > -1) {\n      newSelectedPokemons.splice(indexInSelectedPokemons, 1);\n    } else {\n      newSelectedPokemons.push(name);\n      if (newSelectedPokemons.length > 2) {\n        newSelectedPokemons.shift();\n      }\n    }\n    onChange(newSelectedPokemons);\n  }\n  const pokemons = pages\n    .flatMap((pokemon) => pokemon.results)\n    .map(({ name }) => (\n      <PokemonCard\n        key={name}\n        name={name}\n        isSelected={selectedPokemons.includes(name)}\n        onClick={() => handleClick(name)}\n      />\n    ));\n\n  if (pages.length * truePageSize < pages[0]?.count || pages[0] === undefined) {\n    return (\n      <div className=\"pokemon-list-wrapper\">\n        {pokemons}\n        <div ref={bottomRef} className=\"bottom-ref-element\" />\n      </div>\n    );\n  } else {\n    return <div className=\"pokemon-list-wrapper\">{pokemons}</div>;\n  }\n}\n","import { RefObject, useEffect, useState } from 'react';\n\nexport function useIntersectionObserver(\n  elementRef: RefObject<Element>,\n  onIntersection: () => void,\n  threshold = 0\n): void {\n  const [entry, setEntry] = useState<IntersectionObserverEntry>();\n\n  useEffect(() => {\n    const node = elementRef?.current;\n    if (!node) return;\n    const observer = new IntersectionObserver(([entry]) => setEntry(entry), {\n      threshold,\n    });\n    observer.observe(node);\n\n    return () => observer.disconnect();\n  }, [elementRef, threshold]);\n\n  useEffect(() => {\n    if (entry?.isIntersecting) {\n      onIntersection();\n    }\n  }, [entry?.isIntersecting, onIntersection]);\n}\n","import { PokemonsList } from './PokemonsList';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  selectedPokemons: [string, string];\n  onChangePokemons: (pokemons: [string, string]) => void;\n};\nexport function MainPage({\n  selectedPokemons,\n  onChangePokemons,\n}: Props): JSX.Element {\n  return (\n    <div className=\"page-wrapper\">\n      <h1 className=\"header-text\">Choose two pokemons</h1>\n      <PokemonsList\n        selectedPokemons={selectedPokemons}\n        onChange={onChangePokemons}\n      />\n      <Link to={`/game/${selectedPokemons[0]}/${selectedPokemons[1]}`}>\n        <button\n          className={`button-start-game ${\n            selectedPokemons.length === 2 && !selectedPokemons.includes('')\n              ? 'button-visible'\n              : ''\n          }`}\n        >\n          Start Game\n        </button>\n      </Link>\n    </div>\n  );\n}\n","import { Game } from './Game';\nimport './App.css';\nimport { useState } from 'react';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport { MainPage } from './MainPage';\n\nexport function App(): JSX.Element {\n  const [selectedPokemons, setSelectedPokemons] = useState<[string, string]>([\n    '',\n    '',\n  ]);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path=\"/game/:pokemonOne/:pokemonTwo\"\n            render={({ match }) => <Game {...match.params} />}\n          />\n          <Route\n            path=\"/\"\n            render={() => (\n              <MainPage\n                selectedPokemons={selectedPokemons}\n                onChangePokemons={setSelectedPokemons}\n              />\n            )}\n          />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = async (onPerfEntry?: ReportHandler): Promise<void> => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    const { getCLS, getFID, getFCP, getLCP, getTTFB } = await import(\n      'web-vitals'\n    );\n\n    getCLS(onPerfEntry);\n    getFID(onPerfEntry);\n    getFCP(onPerfEntry);\n    getLCP(onPerfEntry);\n    getTTFB(onPerfEntry);\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// eslint-disable-next-line @typescript-eslint/no-floating-promises\nreportWebVitals();\n"],"sourceRoot":""}